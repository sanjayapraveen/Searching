Bob is preparing to pass IQ test. The most frequent task in this test is to find out which one of the given n numbers differs from the others. Bob observed that one number usually differs from the others in evenness. Help Bob — to check his answers, he needs a program that among the given n numbers finds one that is different in evenness.

Input
The first line contains integer n (3 ≤ n ≤ 100) — amount of numbers in the task. The second line contains n space-separated natural numbers, not exceeding 100. It is guaranteed, that exactly one of these numbers differs from the others in evenness.

Output
Output index of number that differs from the others in evenness. Numbers are numbered from 1 in the input order.
Sample input:
5
2 4 7 8 10

Sample output:
3

Code:
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define vi vector<int>
#define vll vector<ll>
#define ii pair<int, int>
#define vii vector<ii>
#define vvi vector<vi>
#define vvii vector<vii>
#define ld long double
#define iii tuple<int, int, int>
#define sc scanf
#define pb push_back
 
int a[105];
 
int main() {
 
    int n;
    sc("%d", &n);
 
    int e = 0, o = 0;
 
    for(int i=1; i<=n; ++i) {
        sc("%d", &a[i]);
 
        if(a[i]%2) {
            o++;
        }
        else {
            e++;
        }
    }
 
    if(e == 1 && o > 1) {
        for(int i=1; i<=n; ++i) {
            if(a[i]%2 == 0) {
                printf("%d\n", i);
                return 0;
            }
        }
    }
    else if(o == 1 && e > 1) {
        for(int i=1; i<=n; ++i) {
            if(a[i]%2) {
                printf("%d\n", i);
                return 0;
            }
        }
    }
}
Input
4
1 2 1 1
Output
2
Input
3
1 2 2
Output
1
Input
3
100 99 100
Output
2
Input
3
5 3 2
Output
3
Input
20
88 96 66 51 14 88 2 92 18 72 18 88 20 30 4 82 90 100 24 46
Output
4
