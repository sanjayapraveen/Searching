A positive (strictly greater than zero) integer is called round if it is of the form d00...0. In other words, a positive integer is round if all its digits except the leftmost (most significant) are equal to zero. In particular, all numbers from 1 to 9 (inclusive) are round.

For example, the following numbers are round: 4000, 1, 9, 800, 90. The following numbers are not round: 110, 707, 222, 1001.

You are given a positive integer n (1≤n≤104). Represent the number n as a sum of round numbers using the minimum number of summands (addends). In other words, you need to represent the given number n as a sum of the least number of terms, each of which is a round number.

Input
The first line contains an integer t (1≤t≤104) — the number of test cases in the input. Then t test cases follow.

Each test case is a line containing an integer n (1≤n≤104).

Output
Print t answers to the test cases. Each answer must begin with an integer k — the minimum number of summands. Next, k terms must follow, each of which is a round number, and their sum is n. The terms can be printed in any order. If there are several answers, print any of them.

Sample input:
5
5009
7
9876
10000
10
Sample output:
2
5000 9
1
7 
4
800 70 6 9000 
1
10000 
1
10 

Code:
t = int(input())
for i in range(t):
    multiplier = 10
    n = int(input())
    addends = []
    while multiplier < n:
        if n % multiplier != 0:
            addends.append(n%multiplier)
            n = (n//multiplier)*multiplier
        multiplier *= 10
    addends.append(n)
    print(len(addends))
    for i in addends:
        print(i, end=' ')
        
Input
7
1
1
1
1
1
1
1
Output
1
1 1
1 1
1 1
1 1
1 1
1 1
1 
Input
2
9999
52
Output
4
9 90 900 9000 2
2 50 
Input
2
999
52
Output
3
9 90 900 2
2 50 
Input
2
954
18
Output
3
4 50 900 2
8 10 
