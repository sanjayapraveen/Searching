Toad Ivan has m pairs of integers, each integer is between 1 and n, inclusive. The pairs are (a1,b1),(a2,b2),…,(am,bm).

He asks you to check if there exist two integers x and y (1≤x<y≤n) such that in each given pair at least one integer is equal to x or y.

Input
The first line contains two space-separated integers n and m (2≤n≤300000, 1≤m≤300000) — the upper bound on the values of integers in the pairs, and the number of given pairs.

The next m lines contain two integers each, the i-th of them contains two space-separated integers ai and bi (1≤ai,bi≤n,ai≠bi) — the integers in the i-th pair.

Output
Output "YES" if there exist two integers x and y (1≤x<y≤n) such that in each given pair at least one integer is equal to x or y. Otherwise, print "NO". You can print each letter in any case (upper or lower).
Sample input:
4 6
1 2
1 3
1 4
2 3
2 4
3 4
Sample output:
NO
In the first example, you can't choose any x, y because for each such pair you can find a given pair where both numbers are different from chosen integers.

In the second example, you can choose x=2 and y=4.

In the third example, you can choose x=1 and y=2.
Code:
import java.util.Scanner;
 
public class Main
{
 
	static class Pair
	{
		int a = 0;
		int b = 0;
		
		public Pair(int a,int b)
		{
			this.a=a;
			this.b=b;
		}
		
	}
	
	static boolean contains(Pair p,int x)
	{
		if(x==-1) return false;
		return (p.a==x || p.b==x);
	}
	
	public static void main(String[] args)
	{
		Scanner sc = new Scanner(System.in);
		
		int m = sc.nextInt();
		int n = sc.nextInt();
		
		Pair[] p = new Pair[n];
		
		for(int i=0;i<n;i++) p[i] = new Pair(sc.nextInt(),sc.nextInt());
		
		boolean t1 = true;
		int x = p[0].a;
		int y = -1;
		
		for(int i=0;i<n;i++)
		{
			if(contains(p[i],x) || contains(p[i],y)) continue;
			if(y==-1) {y = p[i].a; continue;}
			else {t1 = false; break;}
		}
		
		boolean t2 = true;
		x = p[0].a;
		y = -1;
		for(int i=0;i<n;i++)
		{
			if(contains(p[i],x) || contains(p[i],y)) continue;
			if(y==-1) {y = p[i].b; continue;}
			else{t2 = false; break;}
		}
		
		boolean t3 = true;
		x = p[0].b;
		y = -1;
		for(int i=0;i<n;i++)
		{
			if(contains(p[i],x) || contains(p[i],y)) continue;
			if(y==-1) {y = p[i].a; continue;}
			else{t3 = false;break;}
		}
		
		boolean t4 = true;
		x = p[0].b;
		y = -1;
		for(int i=0;i<n;i++)
		{
			if(contains(p[i],x) || contains(p[i],y)) continue;
			if(y==-1) {y = p[i].b; continue;}
			else{t4 = false;break;}
		}
		
		System.out.println((t1||t2||t3||t4)?"YES":"NO");
		
		
		
		
	}
	
}

Input
5 4
1 2
2 3
3 4
4 5
Output
YES
Input
5 10
1 2
1 3
1 4
1 5
2 3
2 4
2 5
3 4
3 5
4 5
Output
NO
Input
2 1
1 2
Output
YES
Input
6 9
6 2
4 2
3 6
4 6
2 6
1 4
2 6
4 5
4 2
Output
YES
Input
4 6
3 4
4 2
3 2
2 1
1 2
3 1
Output
YES
