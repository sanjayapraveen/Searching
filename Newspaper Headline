A newspaper is published in Walrusland. Its heading is s 1, it consists of lowercase Latin letters. Fangy the little walrus wants to buy several such newspapers, cut out their headings, glue them one to another in order to get one big string. After that walrus erase several letters from this string in order to get a new word s 2. It is considered that when Fangy erases some letter, there's no whitespace formed instead of the letter. That is, the string remains unbroken and it still only consists of lowercase Latin letters.

For example, the heading is "abc". If we take two such headings and glue them one to the other one, we get "abcabc". If we erase the letters on positions 1 and 5, we get a word "bcac".

Which least number of newspaper headings s 1 will Fangy need to glue them, erase several letters and get word s 2?

Input
The input data contain two lines. The first line contain the heading s 1, the second line contains the word s 2. The lines only consist of lowercase Latin letters (1 ≤ |s 1| ≤ 104, 1 ≤ |s 2| ≤ 106).

Output
If it is impossible to get the word s 2 in the above-described manner, print "-1" (without the quotes). Otherwise, print the least number of newspaper headings s 1, which Fangy will need to receive the word s 2.

Sample input:
abc
xyz
Sample output:
-1

Code:
#include<iostream>
#include<stdio.h>
#include<string>
#include<set>
#include<string.h>
using namespace std;
const int N=1e6+10;
int main()
{
    string a,b;
    set<int>s[30];
    cin>>a>>b;
    int len1=a.size(),len2=b.size();
    for(int i=0;i<len1;i++)
        s[a[i]-'a'].insert(i);
    int k=-1,ans=1;
    for(int i=0;i<len2;i++)
    {
        int tmp=b[i]-'a';
        if(s[tmp].empty())
        {
            printf("-1\n");
            goto final;
        }
        set<int>::iterator it=s[tmp].upper_bound(k);
        if(it==s[tmp].end())
        {
            k=-1;
            ans++;
        }
        k=*s[tmp].upper_bound(k);
    }
    printf("%d\n",ans);
    final:
    return 0;
}

Input
abcd
dabc
Output
2
Input
ab
babaaab
Output
5
Input
ab
baaabba
Output
6
Input
fbaaigiihhfaahgdbddgeggjdeigfadhfddja
hbghjgijijcdafcbgiedichdeebaddfddb
Output
-1
Input
ibifgcfdbfdhihbifageaaadegbfbhgeebgdgiafgedchdg
dedfebcfdigdefdediigcfcafbhhiacgfbeccfchd
Output
7
