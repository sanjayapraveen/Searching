There are two rival donut shops.The first shop sells donuts at retail: each donut costs a dollars.The second shop sells donuts only in bulk: box of b donuts costs c dollars. So if you want to buy x donuts from this shop, then you have to buy the smallest number of boxes such that the total number of donuts in them is greater or equal to x.
You want to determine two positive integer values:
how many donuts can you buy so that they are strictly cheaper in the first shop than in the second shop?
how many donuts can you buy so that they are strictly cheaper in the second shop than in the first shop?
If any of these values doesn't exist then that value should be equal to −1. If there are multiple possible answers, then print any of them.
The printed values should be less or equal to 109. It can be shown that under the given constraints such values always exist if any values exist at all.

Input
The first line contains a single integer t (1≤t≤1000) — the number of testcases.

Each of the next t lines contains three integers a, b and c (1≤a≤109, 2≤b≤109, 1≤c≤109).

Output
For each testcase print two positive integers. For both shops print such x that buying x donuts in this shop is strictly cheaper than buying x donuts in the other shop. x should be greater than 0 and less or equal to 109.

If there is no such x, then print −1. If there are multiple answers, then print any of them.

#include <iostream>
     
    using namespace std;
     
    int main(void){
    	int t;
    	__int64 a, b, c;
    	cin>>t;
    	
    	while(t--){
    		cin>>a>>b>>c;
    		cout<<(a<c? 1:-1)<<" ";
    		cout<<(a*b>c? b:-1)<<endl;
    	}
    }
 
Input
1
165 165 165
Output
-1 165
Input
1
768 34 1231290
Output
1 -1
Input
4
29102004 6699 29102004
124 4438 29102004
29102004 1358 29102004
29102004 92385 29102004
Output
-1 6699
1 -1
-1 1358
-1 92385
Input
1
12313 2 2
Output
-1 2
Input
7
5 10 4
4 5 20
2 2 3
1 100000007 100000008
1 100000007 100000009
1 100000007 100000006
5 10 4
Output
-1 10
1 -1
1 2
1 -1
1 -1
1 100000007
-1 10
