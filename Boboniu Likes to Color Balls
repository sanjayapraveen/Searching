Boboniu gives you

r red balls,
g green balls,
b blue balls,
w white balls.
He allows you to do the following operation as many times as you want:

Pick a red ball, a green ball, and a blue ball and then change their color to white.
You should answer if it's possible to arrange all the balls into a palindrome after several (possibly zero) number of described operations.

Input
The first line contains one integer T (1≤T≤100) denoting the number of test cases.

For each of the next T cases, the first line contains four integers r, g, b and w (0≤r,g,b,w≤109).

Output
For each test case, print "Yes" if it's possible to arrange all the balls into a palindrome after doing several (possibly zero) number of described operations. Otherwise, print "No".
Sample input:
4
0 1 1 1
8 1 9 3
0 0 0 0
1000000000 1000000000 1000000000 1000000000
Sample output:
No
Yes
Yes
YesIn the first test case, you're not able to do any operation and you can never arrange three balls of distinct colors into a palindrome.

In the second test case, after doing one operation, changing (8,1,9,3) to (7,0,8,6), one of those possible palindromes may be "rrrwwwbbbbrbbbbwwwrrr".

A palindrome is a word, phrase, or sequence that reads the same backwards as forwards. For example, "rggbwbggr", "b", "gg" are palindromes while "rgbb", "gbbgr" are not. Notice that an empty word, phrase, or sequence is palindrome.

Code:
#include<bits/stdc++.h>
using namespace std;
int T, r, g, b, w, cnt;
int main() {
	cin >> T;
	while (T--) {
		cin >> r >> g >> b >> w;
		cnt = (r & 1) + (g & 1) + (b & 1) + (w & 1);
		if (cnt == 0 || cnt == 1) cout << "Yes\n";
		else if (r > 0 && g > 0 && b > 0 && (cnt == 3 || cnt == 4)) cout << "Yes\n";
		else cout << "No\n";
	}
    return 0;
}
Input
1
0 2 2 2
Output
Yes
Input
1
1 0 3 1
Output
No
Input
100
76 53 20 51
37 61 37 45
33 45 0 93
29 27 33 44
72 8 46 96
2 51 93 71
62 57 100 91
15 84 89 98
13 32 46 77
64 91 70 0
64 99 13 56
41 22 72 68
13 24 26 6
28 98 43 97
24 74 28 6
89 36 56 85
99 55 55 66
17 71 0 54
51 29 86 68
78 54 93 70
64 48 83 15
45 63 71 39
46 36 50 67
91 100 5 86
88 53 64 30
38 88 49 68
35 84 32 6
75 90 74 21
96 6 81 17
18 53 65 88
91 39 95 94
67 62 70 58
43 23 68 100
79 44 94 43
42 60 87 61
22 76 23 47
58 37 56 89
93 25 80 6
83 96 82 53
34 100 ...
Output
No
Yes
No
Yes
Yes
Yes
No
No
No
Yes
No
Yes
Yes
No
Yes
No
Yes
No
No
Yes
No
Yes
Yes
No
Yes
Yes
Yes
No
No
No
Yes
Yes
No
No
No
No
No
No
No
Yes
No
Yes
No
No
No
No
Yes
No
Yes
Yes
No
No
Yes
Yes
Yes
No
No
Yes
No
No
No
No
Yes
Yes
Yes
Yes
Yes
No
No
No
No
Yes
Yes
No
Yes
No
Yes
Yes
No
No
Yes
Yes
Yes
Yes
Yes
Yes
Yes
