There are n programmers that you want to split into several non-empty teams. The skill of the i-th programmer is ai. You want to assemble the maximum number of teams from them. There is a restriction for each team: the number of programmers in the team multiplied by the minimum skill among all programmers in the team must be at least x.

Each programmer should belong to at most one team. Some programmers may be left without a team.

Calculate the maximum number of teams that you can assemble.

Input
The first line contains the integer t (1≤t≤1000) — the number of test cases.

The first line of each test case contains two integers n and x (1≤n≤105;1≤x≤109) — the number of programmers and the restriction of team skill respectively.

The second line of each test case contains n integers a1,a2,…,an (1≤ai≤109), where ai is the skill of the i-th programmer.

The sum of n over all inputs does not exceed 105.

Output
For each test case print one integer — the maximum number of teams that you can assemble.

Sample input:
3
5 10
7 11 2 9 5
4 8
2 4 2 3
4 11
1 3 3 7

Sample output:
2
1
0

Code:
for _ in range(int(input())):
    n,x=map(int,input().split())
    arr=list(map(int,input().split()))
    arr=sorted(arr)
    team=0
 
    for i in arr[::-1]:
        if(i>=x):
            team+=1
            n-=1
        else:
            break
    start=n-1
    if(arr[n-1]*n<x):
        print(team)
        continue
    while(start>-1):
        stop=-1
        people=0
        for i in range(start,-1,-1):
            people+=1
            if(people*arr[i]>=x):
                team+=1
                start=i-1
                stop=0
                people=0
 
        if(stop==-1):
            start-=1
    print(team)
    
    
Input
3
5 10
7 11 2 9 5
4 8
2 4 2 3
4 11
1 3 3 7
Output
2
1
0
Input
20
3051 391662365
663394766 650232147 639195781 78039576 890273287 921749855 36032475 420557029 317060093 93228693 111244768 564409645 537789367 523430176 155583984 843378622 38628608 638518929 967456101 96770826 985475048 53984861 14703139 852888488 328120130 363985498 132942605 499628754 626731301 81355078 397011085 778602726 625313132 439002432 12799760 227413478 659166262 555751501 874239880 36056567 19052134 882042068 449085416 817426405 508409379 321688099 887956395 130197406 463330649 211967720 14...
Output
2296
7883
6115
2616
3350
1712
1550
4958
794
8761
4671
1926
4628
1952
41
2592
1236
8965
4248
563
Input
3
3505 723193247
560976648 121109202 229516294 131471501 454683206 290044473 66521671 725854935 478529344 448472335 289597265 478091399 691706618 983501432 710430672 722433919 797771885 600387248 602454440 826233841 819348229 108809092 313503343 824094437 27167524 268911317 929437680 612887734 7926429 209452825 952160937 499664789 165781305 510668762 893609549 36952581 764351797 240891956 81441860 57549149 294109122 263412571 387599910 61904969 6508420 554636051 269289028 742145865 968253716 980367414 48...
Output
1851
78534
3050
Input
1
100000 69696969
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150...
Output
69
Input
1
100000 1000000000
1000000000 999999999 999999998 999999997 999999996 999999995 999999994 999999993 999999992 999999991 999999990 999999989 999999988 999999987 999999986 999999985 999999984 999999983 999999982 999999981 999999980 999999979 999999978 999999977 999999976 999999975 999999974 999999973 999999972 999999971 999999970 999999969 999999968 999999967 999999966 999999965 999999964 999999963 999999962 999999961 999999960 999999959 999999958 999999957 999999956 999999955 999999954 999999953 99999995...
Output
50000
Input
1
100000 5
1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ...
Output
20000
