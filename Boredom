Alex doesn't like boredom. That's why whenever he gets bored, he comes up with games. One long winter evening he came up with a game and decided to play it.

Given a sequence a consisting of n integers. The player can make several steps. In a single step he can choose an element of the sequence (let's denote it a k) and delete it, at that all elements equal to a k + 1 and a k - 1 also must be deleted from the sequence. That step brings a k points to the player.

Alex is a perfectionist, so he decided to get as many points as possible. Help him.

Input
The first line contains integer n (1 ≤ n ≤ 105) that shows how many numbers are in Alex's sequence.

The second line contains n integers a 1, a 2, ..., a n (1 ≤ a i ≤ 105).

Output
Print a single integer — the maximum number of points that Alex can earn.
Sample input:
9
1 2 1 3 2 2 2 2 3

Sample output:
10

Consider the third test example. At first step we need to choose any element equal to 2. After that step our sequence looks like this [2, 2, 2, 2]. Then we do 4 steps, on each step we choose any element equals to 2. In total we earn 10 points.

Code:
#include <bits/stdc++.h> 
using namespace std;
 
typedef long long ll;
 
const int mxeN = 1e5 + 1;
 
ll v[mxeN];
ll dp[mxeN][2];
int n;
int arr[mxeN];
 
ll solve(int idx,int tookLast){
	if(idx <= 0){
		return 0;
	}
	if(v[idx] == 0)
		return solve(idx-1,0);
	if(dp[idx][tookLast] != -1)
		return dp[idx][tookLast];
	ll ans = solve(idx-1,0);
	if(tookLast == 0)
		ans = max(ans,(v[idx]*idx)+solve(idx-1,1));
	dp[idx][tookLast]= ans;
	return ans;
}
 
int main(){
	cin >> n;
	int mx = 0;
	for(int i=0;i<n;i++){
		cin >> arr[i];
		v[arr[i]]++;
		mx = max(mx,arr[i]);
	}
	memset(dp,-1,sizeof(dp));
	cout << solve(mx,0);
 
}
Input
5
3 3 4 5 4
Output
11
Input
5
5 3 5 3 4
Output
16
Input
5
4 2 3 2 5
Output
9
Input
10
10 5 8 9 5 6 8 7 2 8
Output
46
Input
10
1 1 1 1 1 1 2 3 4 4
Output
14
