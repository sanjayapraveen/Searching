Saran has a hotel consisting of 1010 rooms. The rooms are numbered from 00 to 99 from left to right.
The hotel has two entrances — one from the left end, and another from the right end. When a customer arrives to the hotel through the left entrance, they are assigned to an empty room closest to the left entrance. Similarly, when a customer arrives at the hotel through the right entrance, they are assigned to an empty room closest to the right entrance.
One day, Saran lost the room assignment list. Thankfully Saran's memory is perfect, and he remembers all of the customers: when a customer arrived, from which entrance, and when they left the hotel. Initially the hotel was empty. Write a program that recovers the room assignment list from Saran's memory.
Input
The first line consists of an integer nn (1≤n≤1051≤n≤105), the number of events in Saran's memory.
The second line consists of a string of length nn describing the events in chronological order. Each character represents:
•	'L': A customer arrives from the left entrance.
•	'R': A customer arrives from the right entrance.
•	'0', '1', ..., '9': The customer in room xx (00, 11, ..., 99 respectively) leaves.
It is guaranteed that there is at least one empty room when a customer arrives, and there is a customer in the room xx when xx (00, 11, ..., 99) is given. Also, all the rooms are initially empty.
Output
In the only line, output the hotel room's assignment status, from room 00 to room 99. Represent an empty room as '0', and an occupied room as '1', without spaces.
Sample input:
8
LLRL1RL1

Sample output:
4
Code:
n = int(input())
room = [0 for i in range(10)]
s = input()
for i in s:
	if i =='L':
		for k in range(10):
			if room[k]==0:
				room[k]=1
				break
	elif i=='R':
		for k in range(9,-1,-1):
			if room[k]==0:
				room[k]=1
				break
	else:
		room[int(i)]=0
 
for i in room:
	print(i,end='')
	
Input
8
LLRL1RL1
Output
1010000011
Input
9
L0L0LLRR9
Output
1100000010
Input
1
L
Output
1000000000
Input
100000

Output
1000001101
Input
100
R9L0L0R9R9L0R9R9L0R9R9R9L0R9R9R9L0L0R9L0R9L0L0L0R9R9L0R9L0R9R9L0R9R9L0R9L0L0R9R9R9L0L0L0L0R9L0L0L0L0
Output
0000000000
